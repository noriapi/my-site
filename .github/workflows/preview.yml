name: Deploy Preview

on: pull_request

jobs:
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      deployment-url: ${{ steps.deploy-workers-preview.outputs.deployment-url }}
    steps:
      - name: Generate GitHub token
        uses: actions/create-github-app-token@v2
        id: generate-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm install -g pnpm && pnpm install

      - name: Build
        run: pnpm build

      - name: Deploy preview
        id: deploy-workers-preview
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: versions upload --message "Deployed by GitHub Actions branch ${{ github.ref_name }}"

      - name: Create comment file
        id: create-comment-file
        env:
          DEPLOYMENT_URL: "${{ steps.deploy-workers-preview.outputs.deployment-url }}"
        run: |
          cat  << EOF > comment.md
          ## üöÄ Deploying ${{ github.event.repository.name }} with Cloudflare Workers
          <table>
            <tr>
              <th scope="row">Workers Preview URL</th>
              <td><a href="$DEPLOYMENT_URL" target="_blank" rel="noopener noreferrer">$DEPLOYMENT_URL</a></td>
            </tr>
          </table>
          EOF

      - name: Create PR comment
        if: ${{ steps.deploy-workers-preview.outcome == 'success' }}
        run: "gh pr comment ${{ github.event.number }} --body-file comment.md"
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}

  visual-tests:
    name: Visual Tests
    # Preview Áí∞Â¢É„Å∏„ÅÆ„Éá„Éó„É≠„Ç§„ÅåÊàêÂäü„Åó„Åü„Å®„Åç„Å´ÂÆüË°å
    needs: deploy-preview
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read

    # Playwright „ÅåÊèê‰æõ„Åô„Çã Docker „Ç§„É°„Éº„Ç∏
    container:
      image: mcr.microsoft.com/playwright:v1.53.1-noble

    steps:
      - name: Generate GitHub token
        uses: actions/create-github-app-token@v2
        id: generate-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm install -g pnpm && pnpm install

      # „É¥„Ç£„Ç∏„É•„Ç¢„É´„ÉÜ„Çπ„Éà
      - name: Visual tests
        run: pnpm test:visual
        env:
          BASE_URL: ${{ needs.deploy-preview.outputs.deployment-url }}
          HOME: /root

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: reg-cli-report
          path: tests/screenshots/
          retention-days: 30

      - name: Create PR comment
        uses: actions/github-script@v7
        if: ${{ !cancelled() }}
        with:
          github-token: ${{ steps.generate-token.outputs.token }}
          script: |
            const fs = require('fs')
            const jsonString = fs.readFileSync('./reg.json')
            const reg = JSON.parse(jsonString)
            const body = `
            ## reg-cli
            <table>
              <thead>
                <tr>
                  <th scope="col">Item</th>
                  <th scope="col">Count</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <th scope="row">‚úÖÔ∏è Pass</th>
                  <td>${reg.passedItems.length}</td>
                </tr>
                <tr>
                  <th scope="row">‚ö†Ô∏è Change</th>
                  <td>${reg.diffItems.length}</td>
                </tr>
                <tr>
                  <th scope="row">‚ú® New</th>
                  <td>${reg.newItems.length}</td>
                </tr>
                <tr>
                  <th scope="row">‚ùì Delete</th>
                  <td>${reg.deletedItems.length}</td>
                </tr>
              </tbody>
            </table>
            `

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

  deploy-reports:
    name: Deploy Reports
    if: ${{ !cancelled() }}
    needs: visual-tests
    runs-on: ubuntu-latest
    steps:
      - name: Get artifact ids
        id: artifact-ids
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const list = github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: "reg-cli-report"
            });

            const ids = list.artifacts.filter((a) => !a.expired).map((a) => `${a.id}`);

            returns ids.join(",")

      - name: Download reports
        uses: actions/download-artifact@v4
        with:
          artifact-ids: ${{ steps.artifact-ids.outputs.result }}
          path: reports

      - name: Upload pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: reports/

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
