name: Deploy Preview

on: pull_request

jobs:
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      deployments: write
    environment:
      name: Preview
      url: ${{ steps.deploy-workers-preview.outputs.deployment-url }}
    outputs:
      deployment-url: ${{ steps.deploy-workers-preview.outputs.deployment-url }}
    steps:
      - uses: GitHubSecurityLab/actions-permissions/monitor@v1
        with:
          config: ${{ vars.PERMISSIONS_CONFIG }}

      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Deploy preview
        id: deploy-workers-preview
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: versions upload --message "Deployed by GitHub Actions branch ${{ github.ref_name }}"

      - name: Create comment file
        id: create-comment-file
        env:
          DEPLOYMENT_URL: "${{ steps.deploy-workers-preview.outputs.deployment-url }}"
        run: |
          cat  << EOF > comment.md
          ## ðŸš€ Deploying ${{ github.event.repository.name }} with Cloudflare Workers
          <table>
            <tr>
              <th scope="row">Workers Preview URL</th>
              <td><a href="$DEPLOYMENT_URL" target="_blank" rel="noopener noreferrer">$DEPLOYMENT_URL</a></td>
            </tr>
          </table>
          EOF

      - name: Create PR comment
        if: ${{ steps.deploy-workers-preview.outcome == 'success' }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: "gh pr comment ${{ github.event.number }} --body-file comment.md"

  visual-tests:
    name: Visual Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      pull-requests: write
      contents: read
    outputs:
      comment-id: ${{ steps.create-comment.outputs.comment-id }}
    steps:
      - uses: GitHubSecurityLab/actions-permissions/monitor@v1
        with:
          config: ${{ vars.PERMISSIONS_CONFIG }}

      - uses: actions/checkout@v4

      - name: Visual Regression Tests
        run: docker compose run --rm --build -P tests pnpm playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        id: upload-report-artifact
        with:
          name: playwright-report
          path: playwright-output/playwright-report/
          retention-days: 30

      - uses: daun/playwright-report-summary@v3
        if: ${{ !cancelled() }}
        id: summary
        with:
          report-file: playwright-output/results.json
          job-summary: true
          create-comment: false
          footer: "{{body}}"
          report-url: ${{ steps.upload-report-artifact.outputs.artifact-url }}

      - name: Create PR comment
        uses: wadackel/checkbox-workflow-action@v1
        if: ${{ !cancelled() }}
        id: create-comment
        with:
          id: vrt-command
          number: ${{ github.event.pull_request.number }}
          message: ${{ steps.summary.outputs.summary }}
          config: |
            [ {"update-screenshots": "Update screenshots"} ]

  build-reports:
    name: Build reports
    if: ${{ !cancelled() }}
    needs: visual-tests
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - uses: GitHubSecurityLab/actions-permissions/monitor@v1
        with:
          config: ${{ vars.PERMISSIONS_CONFIG }}

      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: "pnpm"

      - name: Install dev dependencies
        run: pnpm install --dev --ignore-scripts

      - name: Download reports
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          script: |
            const script = require('./.github/scripts/download-reports.cjs')
            await script({github, context, core})

      - name: Upload pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: reports/

  deploy-reports:
    name: Deploy reports
    needs: [visual-tests, build-reports]
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
      pull-requests: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: GitHubSecurityLab/actions-permissions/monitor@v1
        with:
          config: ${{ vars.PERMISSIONS_CONFIG }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - uses: actions/checkout@v4

      - name: Update comment
        uses: actions/github-script@v7
        env:
          COMMENT_ID: ${{ needs.visual-tests.outputs.comment-id }}
          PAGE_URL: ${{ steps.deployment.outputs.page_url }}
        with:
          script: |
            const script = require('./.github/scripts/update-comment.cjs')
            await script({github, context, core})
