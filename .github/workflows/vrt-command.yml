name: VRT Command

on:
  issue_comment:
    types: [created]

jobs:
  update-command:
    name: .vrt-update
    if: ${{ github.event.issue.pull_request
      && github.event.issue.state == 'open'
      && startsWith(github.event.comment.body, '.vrt-update') }}
    runs-on: ubuntu-latest
    outputs:
      deployment-url: ${{ steps.get-deployment.outputs.result }}
      sha: ${{ steps.command.outputs.sha }}
      ref: ${{ steps.command.outputs.ref }}
    permissions:
      pull-requests: write
    steps:
      - uses: GitHubSecurityLab/actions-permissions/monitor@v1
        with:
          config: ${{ vars.PERMISSIONS_CONFIG }}

      - name: .vrt-update
        id: command
        uses: github/command@v2.0.1
        with:
          command: .vrt-update
          skip_ci: true
          allowlist: noriapi

      - name: Generate GitHub token
        uses: actions/create-github-app-token@v2
        id: generate-token
        if: ${{ steps.command.outputs.continue == 'true' }}
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        if: ${{ steps.command.outputs.continue == 'true' }}
        with:
          token: ${{ steps.generate-token.outputs.token }}
          ref: ${{ steps.command.outputs.ref }}

      - uses: docker/setup-buildx-action@v3
        if: ${{ steps.command.outputs.continue == 'true' }}

      - name: Build the backend image with cache
        uses: docker/build-push-action@v6
        if: ${{ steps.command.outputs.continue == 'true' }}
        with:
          load: true
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update screenshots
        if: ${{ steps.command.outputs.continue == 'true' }}
        run: docker compose run --rm -P tests pnpm playwright test --update-snapshots

      - name: Commit & Push
        if: ${{ steps.command.outputs.continue == 'true' }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git config --global --add safe.directory $PWD
          git add "./tests"
          git commit -m "Update screenshots"
          git push
