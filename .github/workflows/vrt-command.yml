name: VRT Command

on:
  issue_comment:
    types: [created]

jobs:
  update-command:
    name: .vrt-update
    if: ${{ github.event.issue.pull_request
      && github.event.issue.state == 'open'
      && startsWith(github.event.comment.body, '.vrt-update') }}
    runs-on: ubuntu-latest
    outputs:
      deployment-url: ${{ steps.get-deployment.outputs.result }}
      sha: ${{ steps.command.outputs.sha }}
      ref: ${{ steps.command.outputs.ref }}
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: GitHubSecurityLab/actions-permissions/monitor@v1
        with:
          config: ${{ vars.PERMISSIONS_CONFIG }}

      - name: .vrt-update
        id: command
        uses: github/command@v2.0.1
        with:
          command: .vrt-update
          skip_ci: true
          allowlist: noriapi

      - uses: actions/checkout@v4
        if: ${{ steps.command.outputs.continue == 'true' }}
        with:
          ref: ${{ steps.command.outputs.ref }}

      - name: Install pnpm
        if: ${{ steps.command.outputs.continue == 'true' }}
        uses: pnpm/action-setup@v4

      - name: Use Node.js
        if: ${{ steps.command.outputs.continue == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version-file: .node-version
          cache: "pnpm"

      - name: Install partial dependencies
        if: ${{ steps.command.outputs.continue == 'true' }}
        run: pnpm install reg-cli

      - name: Take screenshots
        if: ${{ steps.command.outputs.continue == 'true' }}
        run: pnpm docker:test

      - name: Update screenshots
        if: ${{ steps.command.outputs.continue == 'true' }}
        run: pnpm test:visual-update

      - name: Commit & Push
        if: ${{ steps.command.outputs.continue == 'true' }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git config --global --add safe.directory $PWD
          git add "./tests/screenshots/expected"
          git commit -m "Update screenshots"
          git push
